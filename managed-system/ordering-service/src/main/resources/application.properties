spring.application.name=ordering-service
server.port=58086
HOST=localhost
EUREKA_IP_PORT=localhost:58082
API_GATEWAY_IP_PORT=localhost:58081
MYSQL_SERVER=localhost

spring.jpa.database-platform=org.hibernate.dialect.MySQL5InnoDBDialect
spring.jpa.hibernate.ddl-auto=update
spring.datasource.url=jdbc:mysql://${MYSQL_SERVER}/orderingservice
spring.datasource.username=saefauser
spring.datasource.password=SaefaPW0!
spring.jpa.hibernate.use-new-id-generator-mappings=false
spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver

springdoc.swagger-ui.path=/api.html

eureka.instance.prefer-ip-address=true
eureka.instance.ip-address=${HOST}
eureka.instance.instance-id=${HOST}:${server.port}
eureka.client.registerWithEureka=true
eureka.client.fetchRegistry=true
eureka.client.serviceUrl.defaultZone=http://${EUREKA_IP_PORT}/eureka/

#Actuator endpoints
management.info.env.enabled=true
info.application.name=${spring.application.name}
info.application.description=Very cool Spring Boot application

management.endpoints.web.exposure.include=*
management.metrics.export.prometheus.enabled=true
management.metrics.distribution.percentiles-histogram.http.server.requests=true
management.metrics.enable.jvm=true
management.health.circuitbreakers.enabled=true
management.endpoint.health.show-details=always
management.health.ratelimiters.enabled=true

#Resilience4j
#resilience4j.circuitbreaker.configs.backend.registerHealthIndicator=true
#resilience4j.circuitbreaker.configs.backend.slidingWindowType=COUNT_BASED
resilience4j.circuitbreaker.backends.backend.register-health-indicator=true
#number of requests to record in the window
#resilience4j.circuitbreaker.configs.backend.sliding-window-size=1
#time to wait in open state
#resilience4j.circuitbreaker.configs.backend.wait-duration-in-open-state=10s
#percentage of failures in the window to open the circuit
#resilience4j.circuitbreaker.configs.backend.failure-rate-threshold=50
#time to wait in closed state to consider a request as failed
#resilience4j.circuitbreaker.configs.backend.slow-call-duration-threshold=2s


#resilience4j.circuitbreaker.configs.backend.permitted-number-of-calls-in-half-open-state=2
#resilience4j.circuitbreaker.configs.backend.minimum-number-of-calls=1
#resilience4j.circuitbreaker.configs.backend.event-consumer-buffer-size=1
#resilience4j.circuitbreaker.instances.backendB.recordFailurePredicate=io.github.robwin.exception.RecordFailurePredicate


resilience4j.circuitbreaker.backends.backend.registerHealthIndicator=true
resilience4j.circuitbreaker.backends.backend.slidingWindowType=COUNT_BASED
#number of requests to record in the window
resilience4j.circuitbreaker.backends.backend.sliding-window-size=5
#time to wait in open state before switching to half-open [ms]
resilience4j.circuitbreaker.backends.backend.wait-duration-in-open-state=50000
#percentage of failures in the window to open the circuit
resilience4j.circuitbreaker.backends.backend.failure-rate-threshold=50
#time to wait in closed state to consider a request as failed [ms]
resilience4j.circuitbreaker.backends.backend.slow-call-duration-threshold=3000


resilience4j.circuitbreaker.backends.backend.permitted-number-of-calls-in-half-open-state=1
resilience4j.circuitbreaker.backends.backend.minimum-number-of-calls=5
resilience4j.circuitbreaker.backends.backend.event-consumer-buffer-size=1
