buildscript {
	ext {
		springBootVersion = "2.6.5"
		springDependencyManagementVersion = "1.0.11.RELEASE"
		lombokVersion = "1.18.22"
		springdocVersion = "1.6.6"
		springCloudVersion = "2021.0.3"
	}
	repositories {
		mavenCentral()
		maven {
			url "https://plugins.gradle.org/m2/"
		}
	}
	dependencies {
		classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
		classpath "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
		classpath "io.spring.gradle:dependency-management-plugin:${springDependencyManagementVersion}"
	}
}


subprojects {
	group = "polimi.saefa"
	version "latest"

	if (project.name != "delivery-proxy-service" && project.name != "payment-proxy-service") {
		apply plugin: "java"
		sourceCompatibility = "16"

		repositories {
			mavenCentral()
			maven {
				url "https://plugins.gradle.org/m2/"
			}
		}

		if (project.name != "services-restapi") {
			apply plugin: "org.springframework.boot"
			apply plugin: "io.spring.dependency-management"
			dependencyManagement {
				imports {
					mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
				}
			}
		}

		dependencies {
			compileOnly "org.projectlombok:lombok:${lombokVersion}"
			annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

			if (project.name != "services-restapi" && project.name != "eureka-registry-service") {
				implementation "org.springframework.boot:spring-boot-starter-aop"
				implementation "org.springframework.boot:spring-boot-starter-web"
				implementation "org.springframework.cloud:spring-cloud-starter-netflix-eureka-client"
				implementation "org.springframework.boot:spring-boot-starter-actuator"
				implementation "io.micrometer:micrometer-registry-prometheus"
			}
		}

		tasks.named("jar") {
			manifest {
				attributes("Implementation-Title": project.name, "Implementation-Version": project.version)
			}
		}

		tasks.named("test") {
			useJUnitPlatform()
		}
	}

}

